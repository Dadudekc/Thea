{"id": "refine_intelligence", "payload": "Cursor Prompt 7 \u2014 Refine Intelligence: Classification, Dependencies & Heuristics\n\nTarget Files:\n- (new) `dream_mode/utils/task_classifier.py`\n- `dream_mode/swarm_controller.py`\n- `dream_mode/agents/chatgpt_web_agent.py`\n\n```markdown\nYou are upgrading Dream.OS's intelligence by adding task classification, dependency gating, and simple heuristics.\n\n\ud83c\udfaf Objectives:\n1. Create `task_classifier.py`:\n   - Define `classify(task: Dict) -> str` to return categories like \"io-bound\", \"cpu-bound\", \"heuristic\" based on payload patterns.\n   - Use basic keyword matching and allow future ML model integration.\n2. In `swarm_controller.py`, before dispatch:\n   - Call `classify(task)` and route high\u2011priority (\"cpu-bound\") tasks to dedicated \"fast\" workers.\n   - Implement dependency gating: if task has `depends_on`, delay dispatch until its predecessor's result appears in the blob channel.\n3. In `chatgpt_web_agent.py`, add a pre\u2011inject hook:\n   - If a result has `status: \"error\"`, automatically wrap into a corrective re\u2011ask prompt to the user.\n   - Use a simple template:  \n     `\"I encountered an error processing task {task_id}: {error_detail}. Could you clarify?\"`\n\n\ud83d\udd10 Ensure classifiers can be overridden via config, and fallback logic retains existing behavior if no category is matched.\n``` "}