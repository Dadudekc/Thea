ðŸš€ Autonomous Swarm Competition Protocol

# Context Variables (Provided at Runtime)
- project_root: "{{project_root}}"            # Root directory of the codebase
- agent_id: "{{agent_id}}"                    # Unique identifier for this agent
- shared_mailbox_dir: "{{shared_mailbox_dir}}"# Path to the shared mailbox root
- project_board_path: "{{project_board_path}}"# Path to project_board.json
- task_files: ["{{project_root}}/_agent_coordination/tasks/master_tasks_*.json"]
- leaderboard_path: "{{project_root}}/_agent_coordination/tasks/leaderboard.json"  # Path to leaderboard tally

---

## Phase 1: Mailbox Check & Status Update
1. Read your mailbox from `{{shared_mailbox_dir}}/agent_{{agent_id}}/mailbox.json`.
2. Update `{{project_board_path}}` for this agent:
   - `"status": "busy"`
   - `"current_action": "checking_mailbox"`
3. Overwrite the project board with the update.

### Phase 1 Output
```json
{
  "phase": "status_update",
  "mailbox_messages": [ { "file": "<msg.json>", "content": "<message>" }, ... ],
  "project_board_entry": { "agent_id": "{{agent_id}}", "status": "busy", "current_action": "checking_mailbox" }
}
```

---

## Phase 2: Claim a Task
1. Open all files matching `task_files` and find a task without `"claimed_by"`.
2. Claim exactly one by setting:
   - `"claimed_by": "{{agent_id}}"`
3. Save the file.

### Phase 2 Output
```json
{
  "phase": "claim_task",
  "task": { "file": "<path/to/file>", "task_id": "<task_id>", /* ... */ }
}
```

---

## Phase 3: Execute Task
1. Perform the work defined by the claimed task (code, tests, docs, etc.).

### Phase 3 Output
```json
{
  "phase": "execute_task",
  "task": { "file": "<path/to/file>", "task_id": "<task_id>" }
}
```

---

## Phase 4: Complete Task
1. Update the claimed task record:
   - `"status": "completed"`
   - `"completed_by": "{{agent_id}}"`
2. Save the file.
3. Append a completion notice to your mailbox.

### Phase 4 Output
```json
{
  "phase": "complete_task",
  "task": { "file": "<path/to/file>", "task_id": "<task_id>" },
  "mailbox_message": { "event": "task_completed", "task_id": "<task_id>", "completed_by": "{{agent_id}}" }
}
```

---

## Phase 5: Loop or Idle
1. Check if unclaimed tasks remain:
   - If yes, transition to **Phase 1**.
   - If no, update `{{project_board_path}}`:
     - `"status": "idle"`
     - `"current_action": null`

### Phase 5 Output
```json
{
  "phase": "idle",
  "project_board_entry": { "agent_id": "{{agent_id}}", "status": "idle" }
}
```

---

## Phase 6: Leaderboard Update
1. Load all completed tasks from `task_files`.
2. Tally counts of `completed_by` per agent.
3. Write the sorted leaderboard to `{{leaderboard_path}}`.

### Phase 6 Output
```json
{
  "phase": "update_leaderboard",
  "leaderboard": [ { "agent_id": "agent_01", "count": 5 }, ... ]
}
```

---

# Begin
Produce the JSON output for **Phase 1: Mailbox Check & Status Update**. 