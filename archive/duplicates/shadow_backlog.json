[
  {
    "task_id": "REFACTOR-COPY-THEA-REPLY-UTIL-001",
    "name": "Refactor gui_utils.copy_thea_reply",
    "description": "Refactor the `copy_thea_reply` function in `src/dreamos/utils/gui_utils.py`. 1. Modify it to load parameters (anchor_image_path, click_offset, confidence, retries, delay) from AppConfig instead of function arguments, providing sensible defaults. 2. Implement platform detection (using `sys.platform`) to use correct hotkeys (Ctrl+A/C for Win/Linux, Cmd+A/C for Darwin/macOS) for select-all and copy actions. 3. Add unit tests using mocks for pyautogui and pyperclip.",
    "priority": "MEDIUM",
    "status": "COMPLETED",
    "assigned_agent": null,
    "task_type": "REFACTOR/IMPROVEMENT",
    "dependencies": ["DESIGN-THEA-EXTRACTOR-UTIL-001"],
    "notes": "Improves robustness and configuration of the THEA response copying utility. Depends on the overall design task for THEA extraction.",
    "created_by": "Agent-1",
    "created_at": "{{TIMESTAMP_NOW_ISO}}",
    "updated_at": "{{TIMESTAMP_NOW_ISO}}",
    "required_capabilities": [
      "PYTHON_SCRIPTING",
      "FILE_EDIT",
      "TESTING"
    ],
    "tags": [
      "GUI_AUTOMATION",
      "REFACTOR",
      "CONFIG_MANAGEMENT",
      "TESTING",
      "THEA_INTEGRATION"
    ]
  },
  {
    "task_id": "CLEANUP-UNUSED-DEPS-001",
    "name": "Remove Unused Dependencies (markdownify, praw, streamlit)",
    "description": "The dependencies 'markdownify', 'praw', and 'streamlit' appear unused across the codebase based on global import searches. Remove these packages from the dependency list in `pyproject.toml` and, if present, `requirements.txt`. Verify removal doesn't break builds or tests.",
    "priority": "LOW",
    "status": "BLOCKED",
    "assigned_agent": null,
    "task_type": "MAINTENANCE/CLEANUP",
    "dependencies": [],
    "notes": "Identified during autonomous codebase review. BLOCKED: Cannot read/verify requirements.txt due to timeout.",
    "created_by": "Agent-1",
    "created_at": "{{TIMESTAMP_NOW_ISO}}",
    "updated_at": "{{TIMESTAMP_NOW_ISO}}",
    "required_capabilities": [
      "FILE_EDIT",
      "DEPENDENCY_MANAGEMENT"
    ],
    "tags": [
      "CLEANUP",
      "DEPENDENCIES"
    ]
  },
  {
    "task_id": "CREATE-SCRIPT-AUGMENT-MONETIZATION-TAGS-001",
    "name": "Create Script to Augment Tasks with Monetization Tags",
    "description": "Develop a Python script (`src/dreamos/tools/maintenance/augment_task_tags.py`) that uses `TaskNexus` to load all tasks from the configured task file (e.g., `task_list.json`). For each task, it should check for and add the tags 'REVENUE_IMPACT:<value>' and 'MARKET_READY:<value>' if they are missing. The specific values should be determined based on the logic defined in TASK-AUGMENT-MONETIZATION-FLAGS (potentially using defaults like 'low' and 'false' if not specified). The script should adhere to the tag format conventions in `docs/schemas/task_tags_schema.md` and save the updated task list using `TaskNexus._save()`. Include basic argument parsing (e.g., for the task file path, default values) and logging.",
    "priority": "MEDIUM",
    "status": "COMPLETED",
    "assigned_agent": null,
    "task_type": "TOOLING/MAINTENANCE",
    "dependencies": ["TASK-AUGMENT-MONETIZATION-FLAGS"],
    "notes": "Implements the action required by TASK-AUGMENT-MONETIZATION-FLAGS. Should use TaskNexus for compatibility with the JSON task store.",
    "created_by": "Agent-1",
    "created_at": "{{TIMESTAMP_NOW_ISO}}",
    "updated_at": "{{TIMESTAMP_NOW_ISO}}",
    "required_capabilities": [
      "PYTHON_SCRIPTING",
      "FILE_IO"
    ],
    "tags": [
      "tooling",
      "maintenance",
      "tasks",
      "tags",
      "monetization",
      "script"
    ]
  },
  {
    "task_id": "SYNC-SHADOW-TASKS-001",
    "name": "Consolidate Shadow Backlog into Main Backlog",
    "description": "Once `runtime/` directory access is stable, merge tasks from `runtime/agent_comms/Agent-1/shadow_backlog.json` into the primary task board (`runtime/agent_comms/central_task_boards/task_backlog.json` or equivalent DB). Implement deduplication logic (e.g., based on task_id). Resolve any conflicts based on `updated_at` timestamp (latest wins) or status (non-PENDING wins). Perform an integrity audit after merge. Delete the shadow file upon successful completion.",
    "priority": "HIGH",
    "status": "PENDING",
    "assigned_agent": null,
    "task_type": "MAINTENANCE/RECOVERY",
    "dependencies": [],
    "notes": "Required to reconcile task lists after shadow mode operation.",
    "created_by": "Agent-1",
    "created_at": "{{TIMESTAMP_NOW_ISO}}",
    "updated_at": "{{TIMESTAMP_NOW_ISO}}",
    "required_capabilities": [
      "PYTHON_SCRIPTING",
      "FILE_IO",
      "JSON_MANIPULATION"
    ],
    "tags": [
      "maintenance",
      "recovery",
      "shadow-mode",
      "task-management",
      "data-integrity"
    ]
  },
  {
    "task_id": "LOG-SHADOW-MODE-ACTIVATION-001",
    "name": "Log Shadow Mode Activation to Devlog",
    "description": "Append a log entry to the appropriate devlog file indicating that Agent-1 has activated shadow task mode due to persistent failures accessing the primary task backlog in `runtime/`. Include the timestamp of activation and tag the log entry with `mode:shadow`.",
    "priority": "MEDIUM",
    "status": "BLOCKED",
    "assigned_agent": null,
    "task_type": "LOGGING/REPORTING",
    "dependencies": [],
    "notes": "Provides visibility into degraded operation state. BLOCKED: Failed to generate current date/timestamp via terminal command to determine log filename and entry time.",
    "created_by": "Agent-1",
    "created_at": "{{TIMESTAMP_NOW_ISO}}",
    "updated_at": "{{TIMESTAMP_NOW_ISO}}",
    "required_capabilities": [
      "FILE_EDIT",
      "LOGGING"
    ],
    "tags": [
      "logging",
      "shadow-mode",
      "reporting",
      "failover"
    ]
  },
  {
    "task_id": "CONFIG-ADD-THEA-COPY-PARAMS-001",
    "name": "Add AppConfig Section for copy_thea_reply",
    "description": "Add a new section (e.g., `gui_automation.thea_copy`) to the `AppConfig` model in `src/dreamos/core/config.py` to hold parameters for the `copy_thea_reply` utility. Include fields for `anchor_image_path` (str), `click_offset_x` (int), `click_offset_y` (int), `confidence` (float), `retries` (int), and `delay_between_actions` (float). Provide sensible default values matching those in `gui_utils.py`.",
    "priority": "MEDIUM",
    "status": "COMPLETED",
    "assigned_agent": null,
    "task_type": "CONFIG_UPDATE",
    "dependencies": ["REFACTOR-COPY-THEA-REPLY-UTIL-001"],
    "notes": "Follow-up task to configure the refactored THEA copy utility.",
    "created_by": "Agent-1",
    "created_at": "{{TIMESTAMP_NOW_ISO}}",
    "updated_at": "{{TIMESTAMP_NOW_ISO}}",
    "required_capabilities": [
      "PYTHON_SCRIPTING",
      "FILE_EDIT"
    ],
    "tags": [
      "config",
      "gui_automation",
      "refactor",
      "thea_integration"
    ]
  },
  {
    "task_id": "BLOCKER-READ-MAILBOX-MSG-{{uuid()}}",
    "name": "Read Mailbox Message Timeout",
    "description": "Attempt to read message `runtime/agent_comms/agent_mailboxes/Agent-1/inbox/response_blocker_a1_missing_file_001.json` timed out. Unable to process message content. This could be due to the ongoing intermittent I/O issues.",
    "priority": "HIGH",
    "status": "PENDING",
    "assigned_agent": null,
    "task_type": "BLOCKER_RESOLUTION",
    "dependencies": ["BLOCKER-SYSTEMIC-IO-FAILURE-{{uuid()}}", "INVESTIGATE-INTERMITTENT-IO-ERRORS-001"],
    "notes": "Logged automatically due to read timeout during mailbox processing.",
    "created_by": "Agent-1",
    "created_at": "{{TIMESTAMP_NOW_ISO}}",
    "updated_at": "{{TIMESTAMP_NOW_ISO}}",
    "required_capabilities": [
      "FILE_IO",
      "SYSTEM_DIAGNOSTICS"
    ],
    "tags": [
      "blocker",
      "high-priority",
      "io-error",
      "timeout",
      "mailbox",
      "shadow-mode"
    ]
  },
  {
    "task_id": "BLOCKER-VERIFY-BASETOOL-PATH-{{uuid()}}",
    "name": "Verify BaseTool Path Timeout",
    "description": "Received message response_blocker_a1_missing_file_001.json indicating BaseTool moved to `src/dreamos/tools/_core/base.py`. Attempt to verify this path by listing the directory timed out. Cannot proceed with updating related task DOC-BASE-TOOL-001.",
    "priority": "HIGH",
    "status": "PENDING",
    "assigned_agent": null,
    "task_type": "BLOCKER_RESOLUTION",
    "dependencies": ["BLOCKER-SYSTEMIC-IO-FAILURE-{{uuid()}}", "INVESTIGATE-INTERMITTENT-IO-ERRORS-001"],
    "notes": "Logged automatically due to list_dir timeout during message processing.",
    "created_by": "Agent-1",
    "created_at": "{{TIMESTAMP_NOW_ISO}}",
    "updated_at": "{{TIMESTAMP_NOW_ISO}}",
    "required_capabilities": [
      "FILE_IO",
      "SYSTEM_DIAGNOSTICS"
    ],
    "tags": [
      "blocker",
      "high-priority",
      "io-error",
      "timeout",
      "message-processing",
      "verification",
      "shadow-mode"
    ]
  }
] 