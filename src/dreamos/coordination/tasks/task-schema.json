{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "DreamOS Task Schema",
  "description": "Defines the structure for tasks managed within Dream.OS.",
  "type": "object",
  "properties": {
    "task_id": {
      "type": "string",
      "description": "Unique identifier for the task (e.g., UUID)."
    },
    "action": {
      "type": "string",
      "description": "The primary verb or command the task represents."
    },
    "params": {
      "type": "object",
      "description": "Parameters specific to the action.",
      "default": {}
    },
    "status": {
      "type": "string",
      "description": "Current lifecycle status of the task.",
      "default": "PENDING"
      // TODO: Consider defining an enum here or linking to TaskStatus definition
    },
    "priority": {
      "type": "integer",
      "description": "Execution priority (lower value = higher priority).",
      "default": 10
    },
    "depends_on": {
      "type": "array",
      "items": { "type": "string" },
      "description": "List of task_ids that must be completed before this task can start.",
      "default": []
    },
    "retry_count": {
      "type": "integer",
      "minimum": 0,
      "description": "Number of times execution has been retried automatically.",
      "default": 0
    },
    "repair_attempts": {
      "type": "integer",
      "minimum": 0,
      "description": "Number of times manual or automated repair has been attempted.",
      "default": 0
    },
    "failure_count": {
        "type": "integer",
        "minimum": 0,
        "description": "LEGACY? Tracks failures, potentially redundant with retry/repair.",
        "default": 0
    },
    "injected_at": {
      "type": "string",
      "format": "date-time",
      "description": "UTC timestamp when the task was added to the system."
    },
    "injected_by": {
      "type": "string",
      "description": "ID of the agent or system component that created the task."
     },
    "started_at": {
      "type": ["string", "null"],
      "format": "date-time",
      "description": "UTC timestamp when the task processing started.",
      "default": null
    },
    "completed_at": {
      "type": ["string", "null"],
      "format": "date-time",
      "description": "UTC timestamp when the task processing completed (successfully or failed).",
      "default": null
    },
    "result_status": {
      "type": ["string", "null"],
      "enum": ["SUCCESS", "FAILURE", "VALIDATION_ERROR", null],
      "description": "Indicates the outcome quality for scoring purposes.",
      "default": null
     },
     "result_data": {
        "type": ["object", "string", "null"],
        "description": "Data produced as the result of successful task execution.",
        "default": null
     },
     "error_message": {
        "type": ["string", "null"],
        "description": "Details about any error encountered during execution.",
        "default": null
     },
     "progress": {
        "type": ["number", "null"],
        "minimum": 0.0,
        "maximum": 1.0,
        "description": "Task execution progress (0.0 to 1.0).",
        "default": null
     },
    "scoring": {
      "type": ["object", "null"],
      "description": "Performance metrics calculated upon task completion.",
      "properties": {
        "outcome_quality": { "type": ["number", "null"], "minimum": 0.0, "maximum": 1.0, "description": "Score 0.0-1.0 based on result validity/quality." },
        "time_efficiency": { "type": ["number", "null"], "minimum": 0.0, "maximum": 1.0, "description": "Score 0.0-1.0 based on duration vs expected/average." },
        "escalation_penalty": { "type": ["number", "null"], "minimum": 0.0, "maximum": 1.0, "description": "Penalty based on retries/repairs (e.g., 1.0 = no issues)." },
        "total_score": { "type": ["number", "null"], "minimum": 0.0, "maximum": 1.0, "description": "Overall weighted score." },
        "scored_at": { "type": ["string", "null"], "format": "date-time", "description": "UTC timestamp when scoring was performed." },
        "details": { "type": ["string", "null"], "description": "Optional notes on scoring calculation." }
      },
      "additionalProperties": false,
      "default": null
    }
    // Add other optional fields like target_agent, metadata, correlation_id etc. here if needed
  },
  "required": [
    "task_id",
    "action",
    // "params", // Making params optional with default {}
    "status",
    "priority",
    // "depends_on", // Making depends_on optional with default []
    // "retry_count", // Making counts optional with default 0
    // "repair_attempts", // Making counts optional with default 0
    "injected_at",
    "injected_by"
  ],
  "additionalProperties": true // Allow other fields like target_agent, metadata, correlation_id
}
