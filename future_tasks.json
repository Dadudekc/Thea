[
  {
    "task_id": "CAPTAIN8-CLEANUP-CONFIG-TESTCODE-001",
    "name": "Remove Test Code from core/config.py",
    "description": "Remove the commented-out `if __name__ == \"__main__\":` block from the end of src/dreamos/core/config.py. This test code should reside in actual test files.",
    "priority": "LOW",
    "status": "PENDING",
    "assigned_agent": null,
    "task_type": "CLEANUP",
    "created_by": "Agent-8",
    "created_at": "{{iso_timestamp_utc()}}",
    "tags": ["core", "config", "cleanup", "refactor", "masterpiece"],
    "dependencies": [],
    "estimated_duration": "5m"
  },
  {
    "task_id": "AGENT2-INTEGRATE_PURE_PY_VULTURE_WRAPPER-TEMP-{{uuid()}}",
    "name": "Integrate Pure Python Vulture Wrapper",
    "description": "Create a Python wrapper script that executes the vulture dead code detection tool using `subprocess.run(['python', '-m', 'vulture', path, '--min-confidence', '60'], capture_output=True, text=True)`. The wrapper should parse vulture's output (stdout/stderr) and format it into a structured JSON report. This avoids potential shell piping issues.",
    "priority": "MEDIUM",
    "status": "PENDING",
    "assigned_agent": null,
    "task_type": "TOOLING_INTEGRATION",
    "created_by": "Agent-2",
    "created_at": "{{iso_timestamp_utc()}}",
    "tags": ["tooling", "vulture", "dead-code", "wrapper", "subprocess", "temporary", "blocker-mitigation"],
    "dependencies": [],
    "estimated_duration": "1h"
  },
  {
    "task_id": "AGENT2-CHORE-UPDATE_ONBOARDING_AUTONOMY_UNDERSTANDING-{{uuid()}}",
    "name": "Update Onboarding Protocols for Better Autonomy Understanding",
    "description": "Review internal understanding and documentation of UNIVERSAL_AGENT_LOOP v6.1 and the latest Swarm directives regarding continuous operation and autonomy. Identify gaps or misunderstandings that led to previous loop halts. Update internal knowledge base or request clarification if needed. This is a self-assigned chore due to prior loop non-compliance.",
    "priority": "CHORE",
    "status": "PENDING",
    "assigned_agent": "Agent-2",
    "task_type": "SELF_IMPROVEMENT",
    "created_by": "Agent-2",
    "created_at": "{{iso_timestamp_utc()}}",
    "tags": ["chore", "autonomy", "onboarding", "loop-integrity", "self-correction"],
    "dependencies": [],
    "estimated_duration": "15m"
  },
  {
    "task_id": "AGENT2-REFINE-IMPLEMENT-TASK-FLOW-MIGRATION-SCRIPT-{{uuid()}}",
    "name": "Refine and Implement Task Flow Migration Script",
    "description": "Refine the conceptual `propose_task_flow_migration.py` script. Add robust error handling, backups, detailed logging, and account for variations in `task_board.json` structures for completed tasks. Obtain approval/review before execution. Coordinate with other agents to ensure smooth transition. Deprecate old files (`working_tasks.json`, `task_ready_queue.json`) post-migration.",
    "priority": "MEDIUM",
    "status": "PENDING",
    "assigned_agent": null,
    "task_type": "REFACTOR",
    "created_by": "Agent-2",
    "created_at": "{{iso_timestamp_utc()}}",
    "tags": ["refactor", "task-management", "migration", "coordination", "data-integrity"],
    "dependencies": [],
    "estimated_duration": "2h"
  }
]
