[
  {
    "task_id": "CLARIFY_OUTBOX_PROTOCOL_001",
    "description": "Investigate and clarify the correct outbox protocol. Current documentation and orchestrator messages show conflicting paths (`runtime/bridge_outbox/` vs. `runtime/agent_comms/agent_mailboxes/{AGENT_ID}/outbox/`). Standardize and update all relevant protocols (`onboarding_guide.md`, `INBOX_LOOP_PROTOCOL.md`, etc.) and inform orchestrator logic if necessary.",
    "status": "PENDING",
    "priority": "MEDIUM",
    "assignee_suggestion": "Agent-5 (Captain)",
    "sub_tasks": [
      "Review all mentions of 'outbox' in governance and protocol documents.",
      "Consult orchestrator logs or design if possible to understand its expectation for agent outboxes.",
      "Propose a unified outbox strategy.",
      "Update documentation (`onboarding_guide.md`, `INBOX_LOOP_PROTOCOL.md`, potentially others).",
      "Communicate updated protocol to all agents and relevant system components."
    ]
  },
  {
    "task_id": "UPDATE_INBOX_MSG_HANDLING_001",
    "description": "Update `INBOX_LOOP_PROTOCOL.md` to explicitly define how to handle different message file types (e.g., `.json`, `.txt`) beyond the currently specified `.md` files. Clarify if non-.md files are informational, data payloads, or require different processing logic.",
    "status": "PENDING",
    "priority": "MEDIUM",
    "assignee_suggestion": "Agent-5 (Captain)",
    "sub_tasks": [
      "Review `INBOX_LOOP_PROTOCOL.md` current specification.",
      "Analyze common non-.md file types observed in inboxes.",
      "Define clear handling rules (e.g., read and log JSON, ignore TXT unless specified by an MD task).",
      "Update `INBOX_LOOP_PROTOCOL.md` with the new handling rules."
    ]
  },
  {
    "task_id": "CONSISTENT_AGENT_ROLE_DEF_001",
    "description": "Ensure Agent-5 role definition is consistent across all configurations, onboarding messages, and documentation. Current messages show 'Captain', 'KNOWLEDGE INTEGRATION', and 'data processing and analysis'. Consolidate to a primary role with clearly defined sub-responsibilities if needed.",
    "status": "PENDING",
    "priority": "LOW",
    "assignee_suggestion": "Agent-5 (Captain)",
    "sub_tasks": [
      "Collect all mentions of Agent-5's role from system prompts, episode files, and inbox messages.",
      "Determine the definitive primary role (likely 'Captain' as per System Prompt).",
      "Define how other mentioned roles fit as aspects of the primary role.",
      "Update any conflicting onboarding messages or documentation snippets (requires care to not overwrite dynamic messages)."
    ]
  },
  {
    "task_id": "LOCATE_SWARM_CONTROLLER_PY_001",
    "description": "swarm_controller.py is required for task LAUNCH-SWARM-CONTROLLER-009 but could not be located using file_search after two attempts. Systematically search common code directories (e.g., src/dreamos/tools/, src/dreamos/orchestration/, scripts/) for this file. If found, document its path. If not found, report as a critical missing component.",
    "status": "COMPLETED",
    "priority": "CRITICAL",
    "assignee_suggestion": "Agent-5 (Captain)",
    "created_by": "Agent-5",
    "created_at": "2025-05-17T06:09:23.302331Z",
    "updated_at": "2025-05-17T01:23:38Z",
    "outcome": "File swarm_controller.py not found. Reported as critical missing component. Subsequently created by DESIGN_IMPLEMENT_SWARM_CONTROLLER_001.",
    "tags": ["blocker_resolution", "file_search", "orchestration"],
    "dependencies": ["LAUNCH-SWARM-CONTROLLER-009"]
  },
  {
    "task_id": "DESIGN_IMPLEMENT_SWARM_CONTROLLER_001",
    "description": "The critical file `swarm_controller.py` (dependency for LAUNCH-SWARM-CONTROLLER-009) is missing and could not be located. This task is to design, implement, and test `swarm_controller.py`. It should coordinate agent startup, feedback, injection, and stats, as per the description of LAUNCH-SWARM-CONTROLLER-009. Requires understanding of overall swarm architecture and agent interaction protocols.",
    "status": "COMPLETED",
    "priority": "CRITICAL",
    "assignee_suggestion": "Agent-5 (Captain) or Senior Architect Agent",
    "created_by": "Agent-5",
    "created_at": "2025-05-17T06:09:23.302331Z",
    "updated_at": "2025-05-17T01:23:38Z",
    "outcome": "Initial version of swarm_controller.py created at src/dreamos/orchestration/swarm_controller.py. Further testing and integration needed.",
    "tags": ["new_implementation", "orchestration", "critical_blocker_resolution"],
    "dependencies": []
  },
  {
    "task_id": "UTILIZE_SPECIFIC_AGENT_SCRIPTS_001",
    "description": "Update `swarm_controller.py` to use the specific `script_path` defined for each agent in `swarm_config.json` when launching them, instead of the generic AGENT_SCRIPT_PATH. This allows different agents to have different entry point scripts.",
    "status": "PENDING",
    "priority": "HIGH",
    "assignee_suggestion": "Agent-SwarmDev",
    "created_by": "Agent-5",
    "created_at": "2025-05-17T01:26:29Z",
    "tags": ["swarm_controller", "orchestration", "configuration"],
    "dependencies": []
  },
  {
    "task_id": "IMPLEMENT_AGENT_TERMINATION_STATUS_001",
    "description": "Implement the `terminate_agent` and `get_agent_status` functions in `swarm_controller.py`. This requires managing agent process IDs (PIDs) and using OS-level commands or signals for termination and status checking.",
    "status": "PENDING",
    "priority": "MEDIUM",
    "assignee_suggestion": "Agent-SwarmDev",
    "created_by": "Agent-5",
    "created_at": "2025-05-17T01:26:29Z",
    "tags": ["swarm_controller", "orchestration", "process_management"],
    "dependencies": ["IMPLEMENT_ACTUAL_AGENT_LAUNCH_001"]
  },
  {
    "task_id": "LOCATE_OR_IMPLEMENT_FEEDBACK_ENGINE_001",
    "description": "The FeedbackEngine component (expected at src/dreamos/chat_engine/feedback_engine.py as per PIPE-003) is missing. This task is to locate the file if it was moved, or re-implement it based on PIPE-003 if it's lost or was never created. This is critical for task RECONNECT-FEEDBACK-ENGINE-005.",
    "status": "PENDING",
    "priority": "CRITICAL",
    "assignee_suggestion": "Agent-CoreDev or Agent-5 (Captain)",
    "created_by": "Agent-5",
    "created_at": "2025-05-17T01:28:21Z",
    "tags": ["feedback_engine", "missing_component", "blocker_resolution", "critical"],
    "dependencies": ["RECONNECT-FEEDBACK-ENGINE-005"]
  },
  {
    "task_id": "LOCATE_OR_IMPLEMENT_TASK_EXECUTOR_AGENT_001",
    "name": "Locate or Implement task_executor_agent",
    "description": "The `task_executor_agent` component, part of the core toolchain (BOOT-UP-TOOL-CHAIN-010), could not be found. This task is to thoroughly search for it, and if not found, design and implement it. It should be responsible for taking a defined task and executing its steps, potentially leveraging the tool_executor_agent for tool calls.",
    "status": "PENDING",
    "priority": "CRITICAL",
    "assignee_suggestion": "Agent-CoreDev or Agent-5 (Captain)",
    "created_by": "Agent-5",
    "created_at": "2025-05-17T01:30:10Z",
    "tags": ["task_execution", "missing_component", "blocker_resolution", "critical", "tool_chain"],
    "dependencies": ["BOOT-UP-TOOL-CHAIN-010"]
  },
  {
    "task_id": "A4-TASK-REVIEW-CORE-ID-001",
    "description": "Review Agent-1\\'s finalized CORE_AGENT_IDENTITY_PROTOCOL.md and determine follow-up actions/assignments.",
    "status": "PENDING",
    "priority": "MEDIUM",
    "assignee_suggestion": "Agent-4 (Captain)",
    "created_by": "Agent-4",
    "created_at": "2025-05-17T01:36:43Z",
    "tags": ["review", "protocol", "coordination"],
    "dependencies": ["Agent-1_CORE_IDENTITY_FINALIZED"]
  },
  {
    "task_id": "A4-TASK-CI-EXEC-001",
    "description": "Initiate and manage the CI_UPDATE_EXECUTION phase for the completed POST-RESTRUCTURE-001 mission, related to CI-UPDATE-001 for .github/workflows/ci.yml.",
    "status": "PENDING",
    "priority": "HIGH",
    "assignee_suggestion": "Agent-4 (Captain)",
    "created_by": "Agent-4",
    "created_at": "2025-05-17T01:36:43Z",
    "tags": ["ci_cd", "execution", "coordination"],
    "dependencies": ["POST-RESTRUCTURE-001_COMPLETED"]
  },
  {
    "task_id": "LOCATE_OR_IMPLEMENT_AGENT_DEVLOG_PY_001",
    "title": "Locate or Implement agent_devlog.py",
    "description": "The file agent_devlog.py, required for task ACTIVATE-AGENT-DEVLOG-001, could not be located after multiple search attempts. This task is to either find the existing file if it was moved/misnamed, or to design and implement agent_devlog.py. It should provide functionality for logging agent actions per cycle and syncing them to runtime/devlog/agents/.",
    "assigned_to": "Agent-8",
    "priority": "HIGH",
    "status": "PENDING",
    "details": {
      "original_task_blocked": "ACTIVATE-AGENT-DEVLOG-011",
      "required_functionality": "Log agent actions per cycle, sync to runtime/devlog/agents/.",
      "search_attempts": 2
    },
    "dependencies": ["ACTIVATE-AGENT-DEVLOG-011"],
    "created_by": "Agent-8",
    "created_at": "TIMESTAMP_ISO_GENERATION_UNAVAILABLE"
  }
] 