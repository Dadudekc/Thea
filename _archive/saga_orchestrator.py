# digital_dreamscape/saga_orchestrator.py

import logging
from queue import Queue # Assuming log_q might be a queue for cross-thread logging

# Adjust imports based on actual project structure if needed
try:
    # Assuming ReflectionAgent is within the broader project structure accessible via relative path
    from ..._agent_coordination.agents.reflection_agent import ReflectionAgent
except ImportError:
    # Provide a fallback or re-raise if ReflectionAgent is critical
    logging.error("Failed to import ReflectionAgent. Orchestration might fail.")
    # You might want a stub or conditional logic here
    ReflectionAgent = None

try:
    # Assuming episode_generator is in the same directory or accessible
    from .episode_generator import SagaGenerationWorker
except ImportError:
    logging.error("Failed to import SagaGenerationWorker. Orchestration will fail.")
    SagaGenerationWorker = None # Critical dependency

# Placeholder for MemoryManager type hinting if available
# from .memory_manager import UnifiedMemoryManager # Example potential import

logger = logging.getLogger(__name__)

class OrchestratedSagaRunner:
    """
    Coordinates running ReflectionAgent before starting SagaGenerationWorker,
    injecting the detected emotion into the saga generation process.
    """
    def __init__(self, log_q: Queue, memory_manager, chat_items: list, prompt_template_str: str, saga_worker_signals=None, selected_model: str = None):
        """
        Initializes the orchestrator.

        Args:
            log_q: Queue or callable for logging messages safely from threads.
            memory_manager: Instance of the memory manager.
            chat_items: List of chat items (e.g., QListWidgetItem) to process.
            prompt_template_str: The Jinja2 prompt template string for the saga.
            saga_worker_signals: Optional dictionary or object to connect signals
                                (e.g., {'output_ready': handler, 'finished': handler}).
            selected_model: The model selected for generation (might be needed by SagaGenerationWorker).
        """
        self.log_q = log_q
        self.memory_manager = memory_manager
        self.chat_items = chat_items
        self.prompt_template_str = prompt_template_str
        self.selected_model = selected_model # Store selected model
        self.saga_worker_signals = saga_worker_signals or {}
        self.worker = None # Hold the saga worker instance

        # Basic check for the logging mechanism
        if not (callable(getattr(self.log_q, 'put', None)) or callable(self.log_q)):
             logger.warning("log_q doesn't seem to be a Queue or callable. Logging might not work correctly.")

    def _log(self, message: str):
        """Helper method to log messages using the provided queue or callable."""
        try:
            if callable(getattr(self.log_q, 'put', None)):
                self.log_q.put(message)
            elif callable(self.log_q):
                self.log_q(message)
            else:
                # Fallback to standard logger if log_q is invalid
                logger.warning(f"(log_q invalid) {message}")
        except Exception as e:
            logger.error(f"Error logging message via log_q: {e}")


    def run(self):
        """Executes the orchestrated saga generation process."""
        self._log("üöÄ Starting orchestrated saga run...")

        if not ReflectionAgent or not SagaGenerationWorker:
            self._log("‚ùå ERROR: Critical components (ReflectionAgent or SagaGenerationWorker) failed to import. Aborting.")
            # Optionally signal failure if signals are connected
            if 'error' in self.saga_worker_signals and callable(self.saga_worker_signals['error']):
                 self.saga_worker_signals['error']("Critical component import failed.")
            if 'finished' in self.saga_worker_signals and callable(self.saga_worker_signals['finished']):
                 self.saga_worker_signals['finished']() # Ensure finished is always called
            return

        # 1. Reflect first
        emotion = "neutral" # Default emotion
        try:
            self._log("Step 1: Running ReflectionAgent...")
            reflection_agent = ReflectionAgent(agent_id="saga_reflector") # Use a specific ID
            # Define a relevant prompt for the reflection context
            reflection_context = {
                "prompt": f"System State Reflection: Evaluate the overall state and recent activities ({len(self.chat_items)} chats pending saga processing) before initiating the next Dreamscape Saga narrative cycle. Identify the dominant emotional undercurrent or operational mode."
            }
            reflection_result = reflection_agent.run(context=reflection_context)

            emotion = reflection_result.get("emotion", "neutral")
            reason = reflection_result.get("reason", "N/A")
            self._log(f"üí≠ Reflection complete. Detected emotion: {emotion} (Reason: {reason})")

        except Exception as e:
            self._log(f"‚ö†Ô∏è ERROR during ReflectionAgent execution: {e}")
            logger.error("ReflectionAgent execution failed.", exc_info=True)
            self._log(f"Proceeding with default emotion: {emotion}")


        # 2. Launch SagaGenerationWorker with emotion
        try:
            self._log(f"Step 2: Initializing SagaGenerationWorker with emotion '{emotion}'...")

            # Check for required arguments in SagaGenerationWorker's __init__
            # Based on previous findings, it seems to need 'selected_model'
            if not self.selected_model:
                 self._log("‚ùå ERROR: `selected_model` was not provided to OrchestratedSagaRunner. Cannot initialize SagaGenerationWorker.")
                 if 'error' in self.saga_worker_signals and callable(self.saga_worker_signals['error']):
                    self.saga_worker_signals['error']("Missing 'selected_model' for saga generation.")
                 if 'finished' in self.saga_worker_signals and callable(self.saga_worker_signals['finished']):
                    self.saga_worker_signals['finished']() # Ensure finished is called
                 return

            # Ensure SagaGenerationWorker is ready to accept current_emotion
            # We will modify SagaGenerationWorker next to accept this argument
            self.worker = SagaGenerationWorker(
                log_q=self.log_q, # Pass the logging mechanism
                memory_manager=self.memory_manager,
                chat_items=self.chat_items,
                prompt_template_str=self.prompt_template_str,
                selected_model=self.selected_model, # Pass the model
                current_emotion=emotion  # <-- Emotion injected here (will add to __init__)
            )
            self._log("SagaGenerationWorker instance created.")

            # Connect signals dynamically if provided
            # Using getattr to safely check for signal existence
            output_signal = getattr(self.worker, 'saga_output_ready', None)
            if output_signal and 'output_ready' in self.saga_worker_signals and callable(self.saga_worker_signals['output_ready']):
                 output_signal.connect(self.saga_worker_signals['output_ready'])
                 self._log("Connected saga_output_ready signal.")

            finish_signal = getattr(self.worker, 'finished', None)
            if finish_signal and 'finished' in self.saga_worker_signals and callable(self.saga_worker_signals['finished']):
                finish_signal.connect(self.saga_worker_signals['finished'])
                self._log("Connected finished signal.")

            progress_signal = getattr(self.worker, 'progress_signal', None)
            if progress_signal and 'progress' in self.saga_worker_signals and callable(self.saga_worker_signals['progress']):
                progress_signal.connect(self.saga_worker_signals['progress'])
                self._log("Connected progress_signal signal.")

            error_signal = getattr(self.worker, 'error_signal', None)
            if error_signal and 'error' in self.saga_worker_signals and callable(self.saga_worker_signals['error']):
                 error_signal.connect(self.saga_worker_signals['error'])
                 self._log("Connected error_signal signal.")

            # Start the worker thread
            self._log("Starting SagaGenerationWorker thread...")
            self.worker.start()
            self._log("SagaGenerationWorker thread started.")

        except TypeError as te:
             # Catch TypeErrors which might indicate missing/incorrect arguments for __init__
             self._log(f"‚ùå ERROR initializing SagaGenerationWorker (check arguments): {te}")
             logger.error("SagaGenerationWorker initialization failed (TypeError).", exc_info=True)
             if 'error' in self.saga_worker_signals and callable(self.saga_worker_signals['error']):
                 self.saga_worker_signals['error'](f"Saga worker init error: {te}")
             if 'finished' in self.saga_worker_signals and callable(self.saga_worker_signals['finished']):
                 self.saga_worker_signals['finished']() # Ensure finished is called
        except Exception as e:
            self._log(f"‚ùå ERROR initializing or starting SagaGenerationWorker: {e}")
            logger.error("SagaGenerationWorker initialization/start failed.", exc_info=True)
            # Handle error appropriately, maybe signal failure
            if 'error' in self.saga_worker_signals and callable(self.saga_worker_signals['error']):
                 self.saga_worker_signals['error'](f"Saga worker failed: {e}")
            if 'finished' in self.saga_worker_signals and callable(self.saga_worker_signals['finished']):
                 self.saga_worker_signals['finished']() # Ensure finished is called


    def stop(self):
        """Requests the running worker thread to stop."""
        if self.worker and hasattr(self.worker, 'isRunning') and self.worker.isRunning():
            self._log("üõë Requesting stop for SagaGenerationWorker...")
            stop_method = getattr(self.worker, 'stop', None)
            if callable(stop_method):
                 stop_method()
                 self._log("Stop request sent to worker.")
            else:
                 self._log("‚ö†Ô∏è Worker does not have a callable stop() method.")
        else:
             self._log("Orchestrated saga runner or its worker is not currently running.")

# Example usage (if run directly, though likely instantiated elsewhere):
if __name__ == '__main__':
    # Basic setup for demonstration
    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    log_queue = Queue()

    # Mock necessary components for testing
    class MockMemoryManager:
        def get(self, key, default=None): return default
        def set(self, key, value): pass

    class MockQListWidgetItem:
        def __init__(self, text): self._text = text
        def text(self): return self._text
        def data(self, role): return {"id": "mock_id", "title": self._text}

    # Mock signal handlers
    def handle_output(text): print(f"--- SAGA OUTPUT ---\n{text[:200]}...\n--- END SAGA OUTPUT ---")
    def handle_finished(): print("--- SAGA FINISHED ---")
    def handle_progress(msg): print(f"Progress: {msg}")
    def handle_error(msg): print(f"Error: {msg}")

    signals = {
        'output_ready': handle_output,
        'finished': handle_finished,
        'progress': handle_progress,
        'error': handle_error
    }

    # Check if core components were imported
    if not ReflectionAgent or not SagaGenerationWorker:
         print("Cannot run example: ReflectionAgent or SagaGenerationWorker not found.")
    else:
        print("Running OrchestratedSagaRunner example...")
        runner = OrchestratedSagaRunner(
            log_q=log_queue,
            memory_manager=MockMemoryManager(),
            chat_items=[MockQListWidgetItem("Chat 1"), MockQListWidgetItem("Chat 2")],
            prompt_template_str="Emotion: {{ current_emotion }}. Chat: {{ raw_chat_excerpt }}. Memory: {{ current_memory_state }}.", # Simplified template
            saga_worker_signals=signals,
            selected_model="gpt-4" # Provide a model name
        )
        runner.run()

        # Keep main thread alive to see worker output (in a real app, event loop handles this)
        # In a script, you might need worker.wait() or similar if not event-driven
        print("Main thread waiting for worker (simulation)...")
        # runner.worker.wait() # This would block if worker is a QThread and running outside event loop
























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































